Coins
Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)


Problem Description
Whuacmers use coins.They have coins of value A1,A2,A3...An Silverland dollar. One day Hibix opened purse and found there were some coins. He decided to buy a very nice watch in a nearby shop. He wanted to pay the exact price(without change) and he known the price would not more than m.But he didn't know the exact price of the watch.

You are to write a program which reads n,m,A1,A2,A3...An and C1,C2,C3...Cn corresponding to the number of Tony's coins of value A1,A2,A3...An then calculate how many prices(form 1 to m) Tony can pay use these coins. 
 

Input
The input contains several test cases. The first line of each test case contains two integers n(1 ≤ n ≤ 100),m(m ≤ 100000).The second line contains 2n integers, denoting A1,A2,A3...An,C1,C2,C3...Cn (1 ≤ Ai ≤ 100000,1 ≤ Ci ≤ 1000). The last test case is followed by two zeros. 
 

Output
For each test case output the answer on a single line. 
 

Sample Input
3 10
1 2 4 2 1 1
2 5
1 4 2 1
0 0
 

Sample Output
8
4
 
#include<iostream>
using namespace std;

int dp[100001],m;

inline Max(int a,int b)
{
	if(a>b) return a;
	return b;
}

inline void Com(int a)//完全背包
{
	for(int i=a;i<=m;i++)
	{
		if(dp[i-a]==-1) continue;//这里
		dp[i]=Max(dp[i],dp[i-a]+a);
	}
}

inline void One(int a)//01背包
{
	for(int i=m;i>=a;i--)
	{
		if(dp[i-a]==-1) continue;//
		dp[i]=Max(dp[i],dp[i-a]+a);
	}
}

int main()
{
	int n,k,mm,i,va[101],vo[101],num;
	while(scanf("%d%d",&n,&m)!=EOF,n+m)
	{
		memset(dp,-1,sizeof(dp));
		dp[0]=0;//
		for(i=0;i<n;i++)
		{
			scanf("%d",&va[i]);
		}
		for(i=0;i<n;i++)
		{
			scanf("%d",&vo[i]);
		}
		for(i=0;i<n;i++)
		{
			if(va[i]*vo[i]>=m)//完全背包
			{
				Com(va[i]);
			}
			else
			{
				k=1;
				mm=vo[i];
				while(k<mm)//01背包
				{
					One(k*va[i]);
					mm-=k;
					k*=2;
				}
				One(mm*va[i]);
			}
		}
		num=0;
		for(i=m;i>0;i--)
		{
			if(dp[i]!=-1) num++;//统计
		}
		printf("%d\n",num);
	}
	return 0;
}
